{"ast":null,"code":"import _createForOfIteratorHelper from \"C:\\\\Users\\\\le_costa\\\\Documents\\\\Penalidade Digital\\\\WDD430\\\\w01-App\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createForOfIteratorHelper.js\";\nimport _classCallCheck from \"C:\\\\Users\\\\le_costa\\\\Documents\\\\Penalidade Digital\\\\WDD430\\\\w01-App\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\Users\\\\le_costa\\\\Documents\\\\Penalidade Digital\\\\WDD430\\\\w01-App\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nimport { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormGroup, FormControl, FormArray, Validators } from '@angular/forms';\nimport { RecipeService } from '../recipe.service';\n\nvar RecipeEditComponent = /*#__PURE__*/function () {\n  function RecipeEditComponent(route, recipeService, router) {\n    _classCallCheck(this, RecipeEditComponent);\n\n    this.route = route;\n    this.recipeService = recipeService;\n    this.router = router;\n    this.editMode = false;\n  }\n\n  _createClass(RecipeEditComponent, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this = this;\n\n      this.route.params.subscribe(function (params) {\n        _this.id = +params['id'];\n        _this.editMode = params['id'] != null;\n\n        _this.initForm();\n      });\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit() {\n      // const newRecipe = new Recipe(\n      //   this.recipeForm.value['name'],\n      //   this.recipeForm.value['description'],\n      //   this.recipeForm.value['imagePath'],\n      //   this.recipeForm.value['ingredients']);\n      if (this.editMode) {\n        this.recipeService.updateRecipe(this.id, this.recipeForm.value);\n      } else {\n        this.recipeService.addRecipe(this.recipeForm.value);\n      }\n\n      this.onCancel();\n    }\n  }, {\n    key: \"onAddIngredient\",\n    value: function onAddIngredient() {\n      this.recipeForm.get('ingredients').push(new FormGroup({\n        'name': new FormControl(null, Validators.required),\n        'amount': new FormControl(null, [Validators.required, Validators.pattern(/^[1-9]+[0-9]*$/)])\n      }));\n    }\n  }, {\n    key: \"onDeleteIngredient\",\n    value: function onDeleteIngredient(index) {\n      this.recipeForm.get('ingredients').removeAt(index);\n    }\n  }, {\n    key: \"onCancel\",\n    value: function onCancel() {\n      this.router.navigate(['../'], {\n        relativeTo: this.route\n      });\n    }\n  }, {\n    key: \"initForm\",\n    value: function initForm() {\n      var recipeName = '';\n      var recipeImagePath = '';\n      var recipeDescription = '';\n      var recipeIngredients = new FormArray([]);\n\n      if (this.editMode) {\n        var recipe = this.recipeService.getRecipe(this.id);\n        recipeName = recipe.name;\n        recipeImagePath = recipe.imagePath;\n        recipeDescription = recipe.description;\n\n        if (recipe['ingredients']) {\n          var _iterator = _createForOfIteratorHelper(recipe.ingredients),\n              _step;\n\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var ingredient = _step.value;\n              recipeIngredients.push(new FormGroup({\n                'name': new FormControl(ingredient.name, Validators.required),\n                'amount': new FormControl(ingredient.amount, [Validators.required, Validators.pattern(/^[1-9]+[0-9]*$/)])\n              }));\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n        }\n      }\n\n      this.recipeForm = new FormGroup({\n        'name': new FormControl(recipeName, Validators.required),\n        'imagePath': new FormControl(recipeImagePath, Validators.required),\n        'description': new FormControl(recipeDescription, Validators.required),\n        'ingredients': recipeIngredients\n      });\n    }\n  }]);\n\n  return RecipeEditComponent;\n}();\n\nRecipeEditComponent = __decorate([Component({\n  selector: 'app-recipe-edit',\n  templateUrl: './recipe-edit.component.html',\n  styleUrls: ['./recipe-edit.component.css']\n}), __metadata(\"design:paramtypes\", [ActivatedRoute, RecipeService, Router])], RecipeEditComponent);\nexport { RecipeEditComponent };","map":null,"metadata":{},"sourceType":"module"}